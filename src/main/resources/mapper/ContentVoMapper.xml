<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhirui.zblog.dao.ContentVoMapper">
    <resultMap id="content" type="com.zhirui.zblog.model.Vo.ContentVo">
        <id column="cid" jdbcType="INTEGER" property="cid" />
        <result column="title" jdbcType="VARCHAR" property="title" />
        <result column="slug" jdbcType="VARCHAR" property="slug" />
        <result column="created" jdbcType="INTEGER" property="created" />
        <result column="modified" jdbcType="INTEGER" property="modified" />
        <result column="author_id" jdbcType="INTEGER" property="authorId" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="status" jdbcType="VARCHAR" property="status" />
        <result column="tags" jdbcType="VARCHAR" property="tags" />
        <result column="categories" jdbcType="VARCHAR" property="categories" />
        <result column="hits" jdbcType="INTEGER" property="hits" />
        <result column="comments_num" jdbcType="INTEGER" property="commentsNum" />
        <result column="allow_comment" jdbcType="BIT" property="allowComment" />
        <result column="allow_ping" jdbcType="BIT" property="allowPing" />
        <result column="allow_feed" jdbcType="BIT" property="allowFeed" />
    </resultMap>
    <resultMap extends="content" id="contentWithBLOBs" type="com.zhirui.zblog.model.Vo.ContentVo">
        <result column="content" jdbcType="LONGVARCHAR" property="content" />
    </resultMap>
    <sql id="Base_Column_List">
      cid, title, slug, created, modified, author_id, type, status, tags, categories, hits,
      comments_num, allow_comment, allow_ping, allow_feed
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <select id="selectByPrimaryKey" resultMap="contentWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_contents
        where cid = #{cid,jdbcType=INTEGER}
    </select>
    <select id="selectByPage" parameterType="java.lang.Integer" resultMap="contentWithBLOBs">
        select
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_contents
        limit 0, #{arg1}
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(*) from t_contents
    </select>
    <resultMap id="archiveBoMap" type="com.zhirui.zblog.model.Bo.ArchiveBo">
        <id column="date" property="date" />
        <result column="count" property="count" />
    </resultMap>
    <select id="findReturnArchiveBo" resultMap="archiveBoMap">
        select FROM_UNIXTIME(created, '%Y年%m月') as date,
        count(*) as count from t_contents where type = 'post' and status = 'publish' group by date order by date desc
    </select>
    <select id="selectByExample" resultMap="content" parameterType="com.zhirui.zblog.model.Vo.ContentVoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_contents
        <!--<if test="_parameter != null">-->
            <!--<include refid="Example_Where_Clause" />-->
        <!--</if>-->
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limt ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByExampleWithBLOBs" resultMap="contentWithBLOBs" parameterType="com.zhirui.zblog.model.Vo.ContentVoExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        ,
        <include refid="Blob_Column_List" />
        from t_contents
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="cid" parameterType="com.zhirui.zblog.model.Vo.ContentVo">
      insert into t_contents (
          cid, title, slug,
          created, modified, author_id,
          type, status, tags,
          categories, hits, comments_num,
          allow_comment, allow_ping, allow_feed,
          content
      )
      values (
          #{cid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{slug,jdbcType=VARCHAR},
          #{created,jdbcType=INTEGER}, #{modified,jdbcType=INTEGER}, #{authorId,jdbcType=INTEGER},
          #{type,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
          #{categories,jdbcType=VARCHAR}, #{hits,jdbcType=INTEGER}, #{commentsNum,jdbcType=INTEGER},
          #{allowComment,jdbcType=BIT}, #{allowPing,jdbcType=BIT}, #{allowFeed,jdbcType=BIT},
          #{content,jdbcType=LONGVARCHAR}
      )
    </insert>
</mapper>